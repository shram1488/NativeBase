{"version":3,"sources":["../../../__tests__/basic/Form.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","create","toJSON","expect","toMatchSnapshot"],"mappings":"mDAAA,wBACA,4B,2CACA,sD,mEACA,4CACA,4CACA,8CACA,8CACA,4CACA,oD,mFAIAA,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM,CAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB,CACAF,SAASG,EAAT,CAAc,SAAd,CACA,MAAOH,SAAP,CACD,CAJD,EAMAI,GAAG,2BAAH,CAAgC,UAAM,CACpC,GAAMC,MAAO,4BACVC,MADU,CAET,0FACE,0CAAM,eAAN,iDACE,uGADF,CAEE,4FAFF,CADF,CAKE,0CAAM,eAAN,CAAiB,SAAjB,iDACE,uGADF,CAEE,4CAAO,oBAAP,iDAFF,CALF,CAFS,EAaVC,MAbU,EAAb,CAcAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAhBD,EAkBAL,GAAG,4BAAH,CAAiC,UAAM,CACrC,GAAMC,MAAO,4BACVC,MADU,CAET,0FACE,0CAAM,gBAAN,iDACE,uGADF,CAEE,4FAFF,CADF,CAKE,0CAAM,gBAAN,CAAkB,SAAlB,iDACE,uGADF,CAEE,4CAAO,oBAAP,iDAFF,CALF,CAFS,EAaVC,MAbU,EAAb,CAcAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAhBD,EAkBAL,GAAG,8BAAH,CAAmC,UAAM,CACvC,GAAMC,MAAO,4BACVC,MADU,CAET,0FACE,0CAAM,kBAAN,iDACE,uGADF,CAEE,4FAFF,CADF,CAKE,0CAAM,kBAAN,CAAoB,SAApB,iDACE,uGADF,CAEE,4CAAO,oBAAP,iDAFF,CALF,CAFS,EAaVC,MAbU,EAAb,CAcAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAhBD,EAkBAL,GAAG,iCAAH,CAAsC,UAAM,CAC1C,GAAMC,MAAO,4BACVC,MADU,CAET,0FACE,0FACE,4CAAO,YAAY,UAAnB,iDADF,CADF,CAIE,0CAAM,SAAN,iDACE,4CAAO,YAAY,UAAnB,CAA8B,oBAA9B,iDADF,CAJF,CAFS,EAWVC,MAXU,EAAb,CAYAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAdD,EAgBAL,GAAG,6BAAH,CAAkC,UAAM,CACtC,GAAMC,MAAO,4BACVC,MADU,CAET,0FACE,0CAAM,iBAAN,iDACE,uGADF,CAEE,4FAFF,CADF,CAKE,0CAAM,iBAAN,CAAmB,SAAnB,iDACE,uGADF,CAEE,4CAAO,oBAAP,iDAFF,CALF,CAFS,EAaVC,MAbU,EAAb,CAcAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAhBD,EAkBAL,GAAG,uBAAH,CAA4B,UAAM,CAChC,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,0CAAM,YAAN,kDACE,4CAAO,YAAY,iBAAnB,kDADF,CADF,CAFS,EAQVC,MARU,EAAb,CASAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAXD,EAaAL,GAAG,yBAAH,CAA8B,UAAM,CAClC,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,2FACE,4CAAO,YAAY,mBAAnB,kDADF,CADF,CAFS,EAQVC,MARU,EAAb,CASAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAXD,EAaAL,GAAG,uBAAH,CAA4B,UAAM,CAChC,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,0CAAM,YAAN,kDACE,4CAAO,YAAY,iBAAnB,kDADF,CADF,CAFS,EAQVC,MARU,EAAb,CASAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAXD,EAaAL,GAAG,oBAAH,CAAyB,UAAM,CAC7B,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,2FACE,0CAAM,WAAN,CAAa,KAAK,MAAlB,kDADF,CAEE,4CAAO,YAAY,cAAnB,kDAFF,CADF,CAKE,2FACE,4CAAO,YAAY,2BAAnB,kDADF,CAEE,0CAAM,WAAN,CAAa,KAAK,MAAlB,kDAFF,CALF,CAFS,EAaVC,MAbU,EAAb,CAcAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAhBD,EAkBAL,GAAG,uBAAH,CAA4B,UAAM,CAChC,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,0CAAM,YAAN,kDACE,4CAAO,YAAY,4BAAnB,kDADF,CAEE,0CAAM,KAAK,sBAAX,kDAFF,CADF,CAFS,EASVC,MATU,EAAb,CAUAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAZD,EAcAL,GAAG,qBAAH,CAA0B,UAAM,CAC9B,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,0CAAM,UAAN,kDACE,4CAAO,YAAY,0BAAnB,kDADF,CAEE,0CAAM,KAAK,kBAAX,kDAFF,CADF,CAFS,EASVC,MATU,EAAb,CAUAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAZD,EAcAL,GAAG,wBAAH,CAA6B,UAAM,CACjC,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,0CAAM,aAAN,kDACE,4CAAO,aAAP,CAAgB,YAAY,kBAA5B,kDADF,CAEE,0CAAM,KAAK,wBAAX,kDAFF,CADF,CAFS,EASVC,MATU,EAAb,CAUAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CAZD,EAcAL,GAAG,wBAAH,CAA6B,UAAM,CACjC,GAAMC,MAAO,4BACVC,MADU,CAET,2FACE,kDAAU,QAAS,CAAnB,CAAsB,aAAtB,CAA+B,YAAY,UAA3C,kDADF,CAFS,EAMVC,MANU,EAAb,CAOAC,OAAOH,IAAP,EAAaI,eAAb,GACD,CATD","file":"Form.android.js","sourcesContent":["import \"react-native\";\r\nimport React from \"react\";\r\nimport renderer from \"react-test-renderer\";\r\nimport { Form } from \"./../../src/basic/Form\";\r\nimport { Item } from \"./../../src/basic/Item\";\r\nimport { Label } from \"./../../src/basic/Label\";\r\nimport { Input } from \"./../../src/basic/Input\";\r\nimport { Icon } from \"./../../src/basic/Icon\";\r\nimport { Textarea } from \"./../../src/basic/Textarea\";\r\n\r\n// Note: test renderer must be required after react-native.\r\n\r\njest.mock(\"Platform\", () => {\r\n  const Platform = require.requireActual(\"Platform\");\r\n  Platform.OS = \"android\";\r\n  return Platform;\r\n});\r\n\r\nit(\"renders Fixed Label Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item fixedLabel>\r\n          <Label>Username</Label>\r\n          <Input />\r\n        </Item>\r\n        <Item fixedLabel last>\r\n          <Label>Password</Label>\r\n          <Input secureTextEntry />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Inline Label Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item inlineLabel>\r\n          <Label>Username</Label>\r\n          <Input />\r\n        </Item>\r\n        <Item inlineLabel last>\r\n          <Label>Password</Label>\r\n          <Input secureTextEntry />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Floating Label Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item floatingLabel>\r\n          <Label>Username</Label>\r\n          <Input />\r\n        </Item>\r\n        <Item floatingLabel last>\r\n          <Label>Password</Label>\r\n          <Input secureTextEntry />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Placeholder Label Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item>\r\n          <Input placeholder=\"Username\" />\r\n        </Item>\r\n        <Item last>\r\n          <Input placeholder=\"Password\" secureTextEntry />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Stacked Label Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item stackedLabel>\r\n          <Label>Username</Label>\r\n          <Input />\r\n        </Item>\r\n        <Item stackedLabel last>\r\n          <Label>Password</Label>\r\n          <Input secureTextEntry />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Regular Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item regular>\r\n          <Input placeholder=\"Regular Textbox\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Underline Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item>\r\n          <Input placeholder=\"Underline Textbox\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Rounded Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item rounded>\r\n          <Input placeholder=\"Rounded Textbox\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Icon Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item>\r\n          <Icon active name=\"home\" />\r\n          <Input placeholder=\"Icon Textbox\" />\r\n        </Item>\r\n        <Item>\r\n          <Input placeholder=\"Icon Alignment in Textbox\" />\r\n          <Icon active name=\"swap\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Success Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item success>\r\n          <Input placeholder=\"Textbox with Success Input\" />\r\n          <Icon name=\"ios-checkmark-circle\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Error Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item error>\r\n          <Input placeholder=\"Textbox with Error Input\" />\r\n          <Icon name=\"ios-close-circle\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Disabled Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Item disabled>\r\n          <Input disabled placeholder=\"Disabled Textbox\" />\r\n          <Icon name=\"ios-information-circle\" />\r\n        </Item>\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Textarea Input\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Form>\r\n        <Textarea rowSpan={5} bordered placeholder=\"Textarea\" />\r\n      </Form>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n"]}