{"version":3,"sources":["../../../__tests__/basic/Card.android.js"],"names":["deviceWidth","get","width","logo","require","cardImage","jest","mock","Platform","requireActual","OS","it","tree","create","toJSON","expect","toMatchSnapshot","alert","color","resizeMode","height","flex","paddingVertical","alignSelf","marginVertical"],"mappings":"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","file":"Card.android.js","sourcesContent":["import { Image, Dimensions } from \"react-native\";\r\nimport React from \"react\";\r\nimport renderer from \"react-test-renderer\";\r\nimport { Container } from \"./../../src/basic/Container\";\r\nimport { Header } from \"./../../src/basic/Header\";\r\nimport { Content } from \"./../../src/basic/Content\";\r\nimport { Card } from \"./../../src/basic/Card\";\r\nimport { CardItem } from \"./../../src/basic/CardItem\";\r\nimport { Left } from \"./../../src/basic/Left\";\r\nimport { Body } from \"./../../src/basic/Body\";\r\nimport { Right } from \"./../../src/basic/Right\";\r\nimport { Button } from \"./../../src/basic/Button\";\r\nimport { Text } from \"./../../src/basic/Text\";\r\nimport { Icon } from \"./../../src/basic/Icon\";\r\nimport { Thumbnail } from \"./../../src/basic/Thumbnail\";\r\n\r\nconst deviceWidth = Dimensions.get(\"window\").width;\r\nconst logo = require(\"../assets/logo.png\");\r\nconst cardImage = require(\"../assets/drawer-cover.png\");\r\n\r\n// Note: test renderer must be required after react-native.\r\n\r\njest.mock(\"Platform\", () => {\r\n  const Platform = require.requireActual(\"Platform\");\r\n  Platform.OS = \"android\";\r\n  return Platform;\r\n});\r\n\r\nit(\"renders basic Card\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem>\r\n              <Body>\r\n                <Text>This is just a basic card with some text to boot.</Text>\r\n                <Text>Like it? Keep Scrolling...</Text>\r\n              </Body>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Card Header and Footer\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem header>\r\n              <Text>NativeBase</Text>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Body>\r\n                <Text>\r\n                  NativeBase is a free and open source framework that enable\r\n                  developers to build high-quality mobile apps using React\r\n                  Native iOS and Android apps with a fusion of ES6.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Body>\r\n                <Text>\r\n                  NativeBase builds a layer on top of React Native that provides\r\n                  you with basic set of components for mobile application\r\n                  development.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Body>\r\n                <Text>\r\n                  Get on the mobile fast track with NativeBase, the\r\n                  fastest-growing platform and tool set for iOS and Android\r\n                  development.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem footer>\r\n              <Text>GeekyAnts</Text>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders bordered CardItem\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem header bordered>\r\n              <Text>NativeBase</Text>\r\n            </CardItem>\r\n            <CardItem bordered>\r\n              <Body>\r\n                <Text>\r\n                  NativeBase is a free and open source framework that enable\r\n                  developers to build high-quality mobile apps using React\r\n                  Native iOS and Android apps with a fusion of ES6.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem bordered>\r\n              <Body>\r\n                <Text>\r\n                  NativeBase builds a layer on top of React Native that provides\r\n                  you with basic set of components for mobile application\r\n                  development.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem bordered>\r\n              <Body>\r\n                <Text>\r\n                  Get on the mobile fast track with NativeBase, the\r\n                  fastest-growing platform and tool set for iOS and Android\r\n                  development.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem footer bordered>\r\n              <Text>GeekyAnts</Text>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders transparent Card\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card transparent>\r\n            <CardItem>\r\n              <Body>\r\n                <Text>\r\n                  This is just a transparent card with some text to boot.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders button CardItem\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem\r\n              header\r\n              button\r\n              onPress={() => alert(\"This is Card Header\")}\r\n            >\r\n              <Text>NativeBase</Text>\r\n            </CardItem>\r\n            <CardItem button onPress={() => alert(\"This is Card Body\")}>\r\n              <Body>\r\n                <Text>Click on any carditem</Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem\r\n              footer\r\n              button\r\n              onPress={() => alert(\"This is Card Footer\")}\r\n            >\r\n              <Text>GeekyAnts</Text>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Card List\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem header bordered>\r\n              <Text>Social Applications</Text>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Left>\r\n                <Icon\r\n                  active\r\n                  name=\"logo-googleplus\"\r\n                  style={{ color: \"#DD5044\" }}\r\n                />\r\n                <Text>Google Plus</Text>\r\n              </Left>\r\n              <Right>\r\n                <Icon name=\"arrow-forward\" />\r\n              </Right>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Left>\r\n                <Icon\r\n                  active\r\n                  name=\"logo-facebook\"\r\n                  style={{ color: \"#3B579D\" }}\r\n                />\r\n                <Text>facebook</Text>\r\n              </Left>\r\n              <Right>\r\n                <Icon name=\"arrow-forward\" />\r\n              </Right>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Left>\r\n                <Icon active name=\"logo-twitter\" style={{ color: \"#55ACEE\" }} />\r\n                <Text>Twitter</Text>\r\n              </Left>\r\n              <Right>\r\n                <Icon name=\"arrow-forward\" />\r\n              </Right>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Left>\r\n                <Icon active name=\"logo-reddit\" style={{ color: \"#FF4500\" }} />\r\n                <Text>Reddit</Text>\r\n              </Left>\r\n              <Right>\r\n                <Icon name=\"arrow-forward\" />\r\n              </Right>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Left>\r\n                <Icon\r\n                  active\r\n                  name=\"logo-linkedin\"\r\n                  style={{ color: \"#007BB6\" }}\r\n                />\r\n                <Text>LinkedIn</Text>\r\n              </Left>\r\n              <Right>\r\n                <Icon name=\"arrow-forward\" />\r\n              </Right>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Left>\r\n                <Icon active name=\"logo-youtube\" style={{ color: \"#D62727\" }} />\r\n                <Text>YouTube</Text>\r\n              </Left>\r\n              <Right>\r\n                <Icon name=\"arrow-forward\" />\r\n              </Right>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Card Image\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem>\r\n              <Left>\r\n                <Thumbnail source={logo} />\r\n                <Body>\r\n                  <Text>NativeBase</Text>\r\n                  <Text note>GeekyAnts</Text>\r\n                </Body>\r\n              </Left>\r\n            </CardItem>\r\n\r\n            <CardItem cardBody>\r\n              <Image\r\n                style={{\r\n                  resizeMode: \"cover\",\r\n                  width: null,\r\n                  height: 200,\r\n                  flex: 1\r\n                }}\r\n                source={cardImage}\r\n              />\r\n            </CardItem>\r\n\r\n            <CardItem style={{ paddingVertical: 0 }}>\r\n              <Left>\r\n                <Button transparent>\r\n                  <Icon active name=\"thumbs-up\" />\r\n                  <Text>4923 Likes</Text>\r\n                </Button>\r\n              </Left>\r\n              <Body>\r\n                <Button transparent>\r\n                  <Icon active name=\"chatbubbles\" />\r\n                  <Text>89 Comments</Text>\r\n                </Button>\r\n              </Body>\r\n              <Right>\r\n                <Text>11h ago</Text>\r\n              </Right>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n\r\nit(\"renders Card Showcase\", () => {\r\n  const tree = renderer\r\n    .create(\r\n      <Container>\r\n        <Header />\r\n        <Content padder>\r\n          <Card>\r\n            <CardItem bordered>\r\n              <Left>\r\n                <Thumbnail source={logo} />\r\n                <Body>\r\n                  <Text>NativeBase</Text>\r\n                  <Text note>April 15, 2016</Text>\r\n                </Body>\r\n              </Left>\r\n            </CardItem>\r\n\r\n            <CardItem>\r\n              <Body>\r\n                <Image\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    height: 150,\r\n                    resizeMode: \"cover\",\r\n                    width: deviceWidth / 1.18,\r\n                    marginVertical: 5\r\n                  }}\r\n                  source={cardImage}\r\n                />\r\n                <Text>\r\n                  NativeBase is a free and source framework that enable\r\n                  developers to build high-quality mobile apps using React\r\n                  Native iOS and Android apps with a fusion of ES6. NativeBase\r\n                  builds a layer on top of React Native that provides you with\r\n                  basic set of components for mobile application development.\r\n                </Text>\r\n              </Body>\r\n            </CardItem>\r\n            <CardItem style={{ paddingVertical: 0 }}>\r\n              <Left>\r\n                <Button transparent>\r\n                  <Icon name=\"logo-github\" />\r\n                  <Text>4,923 stars</Text>\r\n                </Button>\r\n              </Left>\r\n            </CardItem>\r\n          </Card>\r\n        </Content>\r\n      </Container>\r\n    )\r\n    .toJSON();\r\n  expect(tree).toMatchSnapshot();\r\n});\r\n"]}