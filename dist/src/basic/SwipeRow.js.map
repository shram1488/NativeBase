{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","props","horizontalSwipeGestureBegan","swipeInitialX","parentScrollEnabled","ranPreview","state","dimensionsSet","hiddenHeight","hiddenWidth","_translateX","Value","_panResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","timing","duration","previewDuration","setState","recalculateHiddenLayout","nativeEvent","layout","height","width","preview","previewOpenValue","rightOpenValue","getPreviewAnimation","start","dx","Math","abs","directionalDistanceChangeThreshold","gestureState","dy","absDx","absDy","setScrollEnabled","_value","swipeGestureBegan","newDX","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","setValue","leftOpenValue","swipeToOpenPercent","manuallySwipeRow","spring","friction","tension","onRowDidClose","onRowDidOpen","onRowClose","onRowOpen","panHandlers","transform","translateX","zIndex","list","style","body","backgroundColor","onContentLayout","undefined","styles","hidden","flex","flexDirection","justifyContent","left","right","renderMainContent","defaultProps","closeOnRowPress","container","bottom","overflow","position","top","StyledSwipeRow"],"mappings":"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","file":"SwipeRow.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Animated, PanResponder, Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport { Text } from \"./Text\";\r\nimport { Left } from \"./Left\";\r\nimport { Right } from \"./Right\";\r\nimport { Body } from \"./Body\";\r\nimport { ListItem } from \"./ListItem\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nconst PREVIEW_OPEN_DELAY = 700;\r\nconst PREVIEW_CLOSE_DELAY = 300;\r\n\r\nclass SwipeRow extends Component {\r\n\tstatic defaultProps = {\r\n\t\tleftOpenValue: 0,\r\n\t\trightOpenValue: 0,\r\n\t\tcloseOnRowPress: true,\r\n\t\tdisableLeftSwipe: false,\r\n\t\tdisableRightSwipe: false,\r\n\t\trecalculateHiddenLayout: false,\r\n\t\tpreview: false,\r\n\t\tpreviewDuration: 300,\r\n\t\tdirectionalDistanceChangeThreshold: 2,\r\n\t\tswipeToOpenPercent: 50,\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.horizontalSwipeGestureBegan = false;\r\n\t\tthis.swipeInitialX = null;\r\n\t\tthis.parentScrollEnabled = true;\r\n\t\tthis.ranPreview = false;\r\n\t\tthis.state = {\r\n\t\t\tdimensionsSet: false,\r\n\t\t\thiddenHeight: 0,\r\n\t\t\thiddenWidth: 0,\r\n\t\t};\r\n\t\tthis._translateX = new Animated.Value(0);\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis._panResponder = PanResponder.create({\r\n\t\t\tonMoveShouldSetPanResponder: (e, gs) => this.handleOnMoveShouldSetPanResponder(e, gs),\r\n\t\t\tonPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\r\n\t\t\tonPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\r\n\t\t\tonPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\r\n\t\t\tonShouldBlockNativeResponder: _ => false,\r\n\t\t});\r\n\t}\r\n\r\n\tgetPreviewAnimation(toValue, delay) {\r\n\t\treturn Animated.timing(this._translateX, { duration: this.props.previewDuration, toValue, delay });\r\n\t}\r\n\r\n\tonContentLayout(e) {\r\n\t\tthis.setState({\r\n\t\t\tdimensionsSet: !this.props.recalculateHiddenLayout,\r\n\t\t\thiddenHeight: e.nativeEvent.layout.height,\r\n\t\t\thiddenWidth: e.nativeEvent.layout.width,\r\n\t\t});\r\n\r\n\t\tif (this.props.preview && !this.ranPreview) {\r\n\t\t\tthis.ranPreview = true;\r\n\t\t\tlet previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\r\n\t\t\tthis.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(_ => {\r\n\t\t\t\tthis.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thandleOnMoveShouldSetPanResponder(e, gs) {\r\n\t\tconst { dx } = gs;\r\n\t\treturn Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\r\n\t}\r\n\r\n\thandlePanResponderMove(e, gestureState) {\r\n\t\tconst { dx, dy } = gestureState;\r\n\t\tconst absDx = Math.abs(dx);\r\n\t\tconst absDy = Math.abs(dy);\r\n\r\n\t\t// this check may not be necessary because we don't capture the move until we pass the threshold\r\n\t\t// just being extra safe here\r\n\t\tif (\r\n\t\t\tabsDx > this.props.directionalDistanceChangeThreshold ||\r\n\t\t\tabsDy > this.props.directionalDistanceChangeThreshold\r\n\t\t) {\r\n\t\t\t// we have enough to determine direction\r\n\t\t\tif (absDy > absDx && !this.horizontalSwipeGestureBegan) {\r\n\t\t\t\t// user is moving vertically, do nothing, listView will handle\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// user is moving horizontally\r\n\t\t\tif (this.parentScrollEnabled) {\r\n\t\t\t\t// disable scrolling on the listView parent\r\n\t\t\t\tthis.parentScrollEnabled = false;\r\n\t\t\t\tthis.props.setScrollEnabled && this.props.setScrollEnabled(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.swipeInitialX === null) {\r\n\t\t\t\t// set tranlateX value when user started swiping\r\n\t\t\t\tthis.swipeInitialX = this._translateX._value;\r\n\t\t\t}\r\n\t\t\tif (!this.horizontalSwipeGestureBegan) {\r\n\t\t\t\tthis.horizontalSwipeGestureBegan = true;\r\n\t\t\t\tthis.props.swipeGestureBegan && this.props.swipeGestureBegan();\r\n\t\t\t}\r\n\r\n\t\t\tlet newDX = this.swipeInitialX + dx;\r\n\t\t\tif (this.props.disableLeftSwipe && newDX < 0) {\r\n\t\t\t\tnewDX = 0;\r\n\t\t\t}\r\n\t\t\tif (this.props.disableRightSwipe && newDX > 0) {\r\n\t\t\t\tnewDX = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\r\n\t\t\t\tnewDX = this.props.stopLeftSwipe;\r\n\t\t\t}\r\n\t\t\tif (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\r\n\t\t\t\tnewDX = this.props.stopRightSwipe;\r\n\t\t\t}\r\n\r\n\t\t\tthis._translateX.setValue(newDX);\r\n\t\t}\r\n\t}\r\n\r\n\thandlePanResponderEnd(e, gestureState) {\r\n\t\t// re-enable scrolling on listView parent\r\n\t\tif (!this.parentScrollEnabled) {\r\n\t\t\tthis.parentScrollEnabled = true;\r\n\t\t\tthis.props.setScrollEnabled && this.props.setScrollEnabled(true);\r\n\t\t}\r\n\r\n\t\t// finish up the animation\r\n\t\tlet toValue = 0;\r\n\t\tif (this._translateX._value >= 0) {\r\n\t\t\t// trying to open right\r\n\t\t\tif (this._translateX._value > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {\r\n\t\t\t\t// we're more than halfway\r\n\t\t\t\ttoValue = this.props.leftOpenValue;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// trying to open left\r\n\t\t\tif (this._translateX._value < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {\r\n\t\t\t\t// we're more than halfway\r\n\t\t\t\ttoValue = this.props.rightOpenValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.manuallySwipeRow(toValue);\r\n\t}\r\n\r\n\t/*\r\n\t * This method is called by SwipeListView\r\n\t */\r\n\tcloseRow() {\r\n\t\tthis.manuallySwipeRow(0);\r\n\t}\r\n\r\n\tmanuallySwipeRow(toValue) {\r\n\t\tAnimated.spring(this._translateX, {\r\n\t\t\ttoValue,\r\n\t\t\tfriction: this.props.friction,\r\n\t\t\ttension: this.props.tension,\r\n\t\t}).start(_ => {\r\n\t\t\tif (toValue === 0) {\r\n\t\t\t\tthis.props.onRowDidClose && this.props.onRowDidClose();\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.onRowDidOpen && this.props.onRowDidOpen();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (toValue === 0) {\r\n\t\t\tthis.props.onRowClose && this.props.onRowClose();\r\n\t\t} else {\r\n\t\t\tthis.props.onRowOpen && this.props.onRowOpen(toValue);\r\n\t\t}\r\n\r\n\t\t// reset everything\r\n\t\tthis.swipeInitialX = null;\r\n\t\tthis.horizontalSwipeGestureBegan = false;\r\n\t}\r\n\r\n\trenderMainContent() {\r\n\t\t// We do this annoying if statement for performance.\r\n\t\t// We don't want the onLayout func to run after it runs once.\r\n\t\tif (this.state.dimensionsSet) {\r\n\t\t\treturn (\r\n\t\t\t\t<Animated.View\r\n\t\t\t\t\t{...this._panResponder.panHandlers}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: [{ translateX: this._translateX }],\r\n\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{!this.props.list\r\n\t\t\t\t\t\t? <ListItem list style={this.props.style}>\r\n\t\t\t\t\t\t\t\t{this.props.body}\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t: <View style={[{ backgroundColor: '#FFF' },this.props.style]}>\r\n\t\t\t\t\t\t\t\t{this.props.body}\r\n\t\t\t\t\t\t\t</View>}\r\n\t\t\t\t</Animated.View>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Animated.View\r\n\t\t\t\t\t{...this._panResponder.panHandlers}\r\n\t\t\t\t\tonLayout={e => this.onContentLayout(e)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: [{ translateX: this._translateX }],\r\n\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{!this.props.list\r\n\t\t\t\t\t\t? <ListItem list style={this.props.style}>\r\n\t\t\t\t\t\t\t\t{this.props.body}\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t: <View style={[{ backgroundColor: '#FFF' },this.props.style]}>\r\n\t\t\t\t\t\t\t\t{this.props.body}\r\n\t\t\t\t\t\t\t</View>}\r\n\t\t\t\t</Animated.View>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<View style={this.props.style ? this.props.style : undefined}>\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tstyles.hidden,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\theight: this.state.hiddenHeight,\r\n\t\t\t\t\t\t\tflex:1,\r\n\t\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\r\n\t\t\t\t\t\t{this.props.left}\r\n\t\t\t\t\t</Left>\r\n\t\t\t\t\t<Body style={{ flex: 0 }} />\r\n\t\t\t\t\t<Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\r\n\t\t\t\t\t\t{this.props.right}\r\n\t\t\t\t\t</Right>\r\n\t\t\t\t</View>\r\n\t\t\t\t{this.renderMainContent()}\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\t// As of RN 0.29 flex: 1 is causing all rows to be the same height\r\n\t\t// flex: 1\r\n\t},\r\n\thidden: {\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\toverflow: \"hidden\",\r\n\t\tposition: \"absolute\",\r\n\t\tright: 0,\r\n\t\ttop: 0,\r\n\t},\r\n};\r\n\r\nconst StyledSwipeRow = connectStyle(\"NativeBase.SwipeRow\", {}, mapPropsToStyleNames)(SwipeRow);\r\nexport { StyledSwipeRow as SwipeRow };\r\n"]}