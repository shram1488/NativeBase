{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","iconType","undefined","context","theme","variables","iconFamily","Icon","setIcon","props","type","nextProps","nextState","_root","c","contextTypes","object","propTypes","style","oneOfType","number","array","oneOf","StyledIconNB"],"mappings":"u1BAAA,4B,2CACA,qC,mDAEA,iEAEA,4D,iDACA,wD,6CACA,0D,+CACA,kE,uDACA,gE,qDACA,sE,2DACA,wF,6EACA,4D,iDACA,wD,6CACA,0E,+DACA,8D,mDAEA,mE,68BAEMA,O,8QAKIC,Q,CAAU,CAChB,GAAIA,UAAYC,SAAZ,EAAyB,KAAKC,OAAL,CAAaC,KAA1C,CAAiD,CAC/CH,SAAW,KAAKE,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD,CACRC,UADH,CAED,CACD,OAAQL,QAAR,EACA,IAAK,QAAL,CACE,KAAKM,IAAL,kBACA,MACF,IAAK,WAAL,CACE,KAAKA,IAAL,qBACA,MACF,IAAK,SAAL,CACE,KAAKA,IAAL,mBACA,MACF,IAAK,aAAL,CACE,KAAKA,IAAL,uBACA,MACF,IAAK,YAAL,CACE,KAAKA,IAAL,sBACA,MACF,IAAK,UAAL,CACE,KAAKA,IAAL,oBACA,MACF,IAAK,wBAAL,CACE,KAAKA,IAAL,kCACA,MACF,IAAK,eAAL,CACE,KAAKA,IAAL,yBACA,MACF,IAAK,UAAL,CACE,KAAKA,IAAL,oBACA,MACF,IAAK,iBAAL,CACE,KAAKA,IAAL,2BACA,MACF,IAAK,QAAL,CACE,KAAKA,IAAL,kBACA,MACF,QACE,KAAKA,IAAL,oBAnCF,CAqCD,C,+DAEoB,CACnB,KAAKC,OAAL,CAAa,KAAKC,KAAL,CAAWC,IAAxB,EACD,C,gEAEmBC,S,CAAWC,S,CAAW,CACxC,GAAID,UAAUD,IAAV,EAAkB,KAAKD,KAAL,CAAWC,IAAX,EAAmBC,UAAUD,IAAnD,CAAyD,CACvD,KAAKF,OAAL,CAAaG,UAAUD,IAAvB,EACD,CACF,C,uCAEQ,iBACP,MAAO,oCAAM,IAAN,WAAW,IAAK,sBAAM,QAAKG,KAAL,CAAaC,CAAnB,EAAhB,EAA2C,KAAKL,KAAhD,mDAAP,CACD,C,sCA7DGT,M,CACGe,Y,CAAe,CACpBX,MAAO,oBAAUY,MADG,C,CA+DxBhB,OAAOiB,SAAP,CAAmB,CACjBC,MAAO,oBAAUC,SAAV,CAAoB,CACzB,oBAAUH,MADe,CAEzB,oBAAUI,MAFe,CAGzB,oBAAUC,KAHe,CAApB,CADU,CAMjBX,KAAM,oBAAUY,KAAV,CAAgB,CACpB,QADoB,CAEpB,WAFoB,CAGpB,SAHoB,CAIpB,aAJoB,CAKpB,YALoB,CAMpB,UANoB,CAOpB,wBAPoB,CAQpB,eARoB,CASpB,UAToB,CAUpB,iBAVoB,CAWpB,QAXoB,CAAhB,CANW,CAAnB,CAqBA,GAAMC,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,iCAInBvB,MAJmB,CAArB,C,QAMyBA,M,CAAhBuB,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\n\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport Entypo from \"react-native-vector-icons/Entypo\";\r\nimport Feather from \"react-native-vector-icons/Feather\";\r\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\r\nimport Foundation from \"react-native-vector-icons/Foundation\";\r\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport Octicons from \"react-native-vector-icons/Octicons\";\r\nimport Zocial from \"react-native-vector-icons/Zocial\";\r\nimport SimpleLineIcons from \"react-native-vector-icons/SimpleLineIcons\";\r\nimport EvilIcons from \"react-native-vector-icons/EvilIcons\";\r\n\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass IconNB extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n\r\n  setIcon(iconType) {\r\n    if (iconType == undefined && this.context.theme) {\r\n      iconType = this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n        .iconFamily;\r\n    }\r\n    switch (iconType) {\r\n    case \"Entypo\":\r\n      this.Icon = Entypo;\r\n      break;\r\n    case \"EvilIcons\":\r\n      this.Icon = EvilIcons;\r\n      break;\r\n    case \"Feather\":\r\n      this.Icon = Feather;\r\n      break;\r\n    case \"FontAwesome\":\r\n      this.Icon = FontAwesome;\r\n      break;\r\n    case \"Foundation\":\r\n      this.Icon = Foundation;\r\n      break;\r\n    case \"Ionicons\":\r\n      this.Icon = Ionicons;\r\n      break;\r\n    case \"MaterialCommunityIcons\":\r\n      this.Icon = MaterialCommunityIcons;\r\n      break;\r\n    case \"MaterialIcons\":\r\n      this.Icon = MaterialIcons;\r\n      break;\r\n    case \"Octicons\":\r\n      this.Icon = Octicons;\r\n      break;\r\n    case \"SimpleLineIcons\":\r\n      this.Icon = SimpleLineIcons;\r\n      break;\r\n    case \"Zocial\":\r\n      this.Icon = Zocial;\r\n      break;\r\n    default:\r\n      this.Icon = Ionicons;\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setIcon(this.props.type);\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.type && this.props.type != nextProps.type) {\r\n      this.setIcon(nextProps.type);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\r\n  }\r\n}\r\n\r\nIconNB.propTypes = {\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  type: PropTypes.oneOf([\r\n    \"Entypo\",\r\n    \"EvilIcons\",\r\n    \"Feather\",\r\n    \"FontAwesome\",\r\n    \"Foundation\",\r\n    \"Ionicons\",\r\n    \"MaterialCommunityIcons\",\r\n    \"MaterialIcons\",\r\n    \"Octicons\",\r\n    \"SimpleLineIcons\",\r\n    \"Zocial\"\r\n  ])\r\n};\r\n\r\nconst StyledIconNB = connectStyle(\r\n  \"NativeBase.IconNB\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(IconNB);\r\n\r\nexport { StyledIconNB as IconNB };\r\n"]}