{"version":3,"sources":["../../../src/basic/Gravatar.js"],"names":["GRAVATAR_URI","Gravatar","gravatar","borderRadius","props","size","width","height","resizeMode","contain","undefined","gravatarStyle","circular","square","defaultProps","style","merge","getInitialStyle","prepareRootProps","uri","email","_root","c","propTypes","string","isRequired","oneOfType","object","number","array","bool","StyledGravatar"],"mappings":"21BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,8B,6CACA,sC,mDACA,mE,yEACA,gE,wEACA,mD,07BAEA,GAAMA,cAAe,kCAArB,C,GAEMC,S,+TACc,CAChB,MAAO,CACLC,SAAU,CACRC,aAAc,KAAKC,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAkB,CAApC,CAAwC,EAD9C,CAERC,MAAO,KAAKF,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAA7B,CAAoC,EAFnC,CAGRE,OAAQ,KAAKH,KAAL,CAAWC,IAAX,CAAkB,KAAKD,KAAL,CAAWC,IAA7B,CAAoC,EAHpC,CAIRG,WAAY,KAAKJ,KAAL,CAAWK,OAAX,CAAqB,SAArB,CAAiCC,SAJrC,CADL,CAAP,CAQD,C,2DAEkB,CACjB,GAAMC,eAAgB,EAAtB,CACA,GAAI,KAAKP,KAAL,CAAWQ,QAAf,CAAyB,CACvBD,cAAcL,KAAd,CAAsB,KAAKF,KAAL,CAAWC,IAAjC,CACAM,cAAcJ,MAAd,CAAuB,KAAKH,KAAL,CAAWC,IAAlC,CACAM,cAAcR,YAAd,CAA6B,KAAKC,KAAL,CAAWC,IAAX,CAAkB,CAA/C,CACD,CAJD,IAIO,IAAI,KAAKD,KAAL,CAAWS,MAAf,CAAuB,CAC5BF,cAAcL,KAAd,CAAsB,KAAKF,KAAL,CAAWC,IAAjC,CACAM,cAAcJ,MAAd,CAAuB,KAAKH,KAAL,CAAWC,IAAlC,CACAM,cAAcR,YAAd,CAA6B,CAA7B,CACD,CAED,GAAMW,cAAe,CACnBC,MAAO,iBAAEC,KAAF,CAAQ,KAAKC,eAAL,GAAuBf,QAA/B,CAAyCS,aAAzC,CADY,CAArB,CAIA,MAAO,2BAAa,KAAKP,KAAlB,CAAyBU,YAAzB,CAAP,CACD,C,uCAEQ,iBACP,GAAMV,OAAQ,KAAKc,gBAAL,EAAd,CAEA,GAAMC,KAASnB,aAAe,wBAAI,KAAKI,KAAL,CAAWgB,KAAf,CAAxB,OAAmDhB,MAAMW,KAAN,CACtDR,MADH,CAEA,MAAO,4DAAO,IAAK,sBAAM,QAAKc,KAAL,CAAaC,CAAnB,EAAZ,EAAuClB,KAAvC,EAA8C,OAAQ,CAAEe,OAAF,CAAtD,kDAAP,CACD,C,qDAGHlB,SAASsB,SAAT,aACK,mBAAMA,SADX,EAEEH,MAAO,oBAAUI,MAAV,CAAiBC,UAF1B,CAGEV,MAAO,oBAAUW,SAAV,CAAoB,CACzB,oBAAUC,MADe,CAEzB,oBAAUC,MAFe,CAGzB,oBAAUC,KAHe,CAApB,CAHT,CAQExB,KAAM,oBAAUuB,MARlB,CASEhB,SAAU,oBAAUkB,IATtB,CAUEjB,OAAQ,oBAAUiB,IAVpB,GAaA,GAAMC,gBAAiB,yCACrB,qBADqB,CAErB,EAFqB,iCAIrB9B,QAJqB,CAAvB,C,QAK2BA,Q,CAAlB8B,c","file":"Gravatar.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport _ from \"lodash\";\r\nimport md5 from \"blueimp-md5\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport NativeBaseComponent from \"./Base/NativeBaseComponent\";\r\nimport computeProps from \"../utils/computeProps\";\r\n\r\nconst GRAVATAR_URI = \"https://www.gravatar.com/avatar/\";\r\n\r\nclass Gravatar extends NativeBaseComponent {\r\n  getInitialStyle() {\r\n    return {\r\n      gravatar: {\r\n        borderRadius: this.props.size ? this.props.size / 2 : 15,\r\n        width: this.props.size ? this.props.size : 30,\r\n        height: this.props.size ? this.props.size : 30,\r\n        resizeMode: this.props.contain ? \"contain\" : undefined\r\n      }\r\n    };\r\n  }\r\n\r\n  prepareRootProps() {\r\n    const gravatarStyle = {};\r\n    if (this.props.circular) {\r\n      gravatarStyle.width = this.props.size;\r\n      gravatarStyle.height = this.props.size;\r\n      gravatarStyle.borderRadius = this.props.size / 2;\r\n    } else if (this.props.square) {\r\n      gravatarStyle.width = this.props.size;\r\n      gravatarStyle.height = this.props.size;\r\n      gravatarStyle.borderRadius = 0;\r\n    }\r\n\r\n    const defaultProps = {\r\n      style: _.merge(this.getInitialStyle().gravatar, gravatarStyle)\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n\r\n  render() {\r\n    const props = this.prepareRootProps();\r\n\r\n    const uri = `${GRAVATAR_URI + md5(this.props.email)}?s=${props.style\r\n      .height}`;\r\n    return <Image ref={c => (this._root = c)} {...props} source={{ uri }} />;\r\n  }\r\n}\r\n\r\nGravatar.propTypes = {\r\n  ...Image.propTypes,\r\n  email: PropTypes.string.isRequired,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  size: PropTypes.number,\r\n  circular: PropTypes.bool,\r\n  square: PropTypes.bool\r\n};\r\n\r\nconst StyledGravatar = connectStyle(\r\n  \"NativeBase.Gravatar\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Gravatar);\r\nexport { StyledGravatar as Gravatar };\r\n"]}