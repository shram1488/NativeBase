{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","leftPadder","style","padding","paddingLeft","leftInset","rightPadder","paddingRight","rightInset","variables","context","theme","isIphoneX","disableKBDismissScroll","x","y","keyboardShouldPersistTaps","_scrollview","c","_root","layoutChange","e","nativeEvent","layout","calculateLeft","padder","contentPadding","contentContainerStyle","children","contextTypes","object","propTypes","oneOfType","number","array","bool","enableResetScrollToCoords","string","StyledContent"],"mappings":"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","file":"Content.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass Content extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orientation: \"portrait\"\r\n    };\r\n  }\r\n  layoutChange(val) {\r\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\r\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\r\n    else {\r\n      this.setState({ orientation: \"portrait\" });\r\n    }\r\n  }\r\n\r\n  calculateLeft(mode, inSet) {\r\n    let inset = null;\r\n    if (inSet !== undefined) {\r\n      inset = inSet;\r\n    } else {\r\n      inset = variable.Inset;\r\n    }\r\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\r\n    let leftPadder = null;\r\n    if (this.props.style[1] !== undefined) {\r\n      if (\r\n        this.props.style[1].padding !== undefined ||\r\n        this.props.style[1].paddingLeft !== undefined\r\n      ) {\r\n        leftPadder =\r\n          (this.props.style[1].paddingLeft\r\n            ? this.props.style[1].paddingLeft\r\n            : this.props.style[1].padding) + InsetValues.leftInset;\r\n      }\r\n    } else if (\r\n      this.props.style.padding !== undefined ||\r\n      this.props.style.paddingLeft !== undefined\r\n    ) {\r\n      leftPadder =\r\n        (this.props.style.paddingLeft\r\n          ? this.props.style.paddingLeft\r\n          : this.props.style.padding) + InsetValues.leftInset;\r\n    } else {\r\n      leftPadder = InsetValues.leftInset;\r\n    }\r\n    return leftPadder;\r\n  }\r\n  calculateRight(mode, inSet) {\r\n    let inset = null;\r\n    if (inSet !== undefined) {\r\n      inset = inSet;\r\n    } else {\r\n      inset = variable.Inset;\r\n    }\r\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\r\n    let rightPadder = null;\r\n    if (this.props.style[1] !== undefined) {\r\n      if (\r\n        this.props.style[1].padding !== undefined ||\r\n        this.props.style[1].paddingRight !== undefined\r\n      ) {\r\n        rightPadder =\r\n          (this.props.style[1].paddingRight\r\n            ? this.props.style[1].paddingRight\r\n            : this.props.style[1].padding) + InsetValues.rightInset;\r\n      }\r\n    } else if (\r\n      this.props.style.padding !== undefined ||\r\n      this.props.style.paddingRight !== undefined\r\n    ) {\r\n      rightPadder =\r\n        (this.props.style.paddingRight\r\n          ? this.props.style.paddingRight\r\n          : this.props.style.padding) + InsetValues.rightInset;\r\n    } else {\r\n      rightPadder = InsetValues.rightInset;\r\n    }\r\n    return rightPadder;\r\n  }\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    return variable.isIphoneX ? (\r\n      <KeyboardAwareScrollView\r\n        automaticallyAdjustContentInsets={false}\r\n        resetScrollToCoords={\r\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\r\n        }\r\n        keyboardShouldPersistTaps={\r\n          this.props.keyboardShouldPersistTaps\r\n            ? this.props.keyboardShouldPersistTaps\r\n            : \"handled\"\r\n        }\r\n        ref={c => {\r\n          this._scrollview = c;\r\n          this._root = c;\r\n\t\t}}\r\n        {...this.props}\r\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\r\n        style={[\r\n          this.props.style,\r\n          {\r\n            paddingLeft: this.calculateLeft(\r\n              this.state.orientation,\r\n              variables.Inset\r\n            )\r\n          }\r\n\t\t]}\r\n\t\tcontentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\r\n      >\r\n        {this.props.children}\r\n      </KeyboardAwareScrollView>\r\n    ) : (\r\n      <KeyboardAwareScrollView\r\n        automaticallyAdjustContentInsets={false}\r\n        resetScrollToCoords={\r\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\r\n        }\r\n        keyboardShouldPersistTaps={\r\n          this.props.keyboardShouldPersistTaps\r\n            ? this.props.keyboardShouldPersistTaps\r\n            : \"handled\"\r\n        }\r\n        ref={c => {\r\n          this._scrollview = c;\r\n          this._root = c;\r\n        }}\r\n\t\t{...this.props}\r\n\t\tcontentContainerStyle={[{ padding: this.props.padder ? variables.contentPadding : undefined }, this.props.contentContainerStyle]}\r\n      >\r\n        {this.props.children}\r\n      </KeyboardAwareScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nContent.propTypes = {\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  padder: PropTypes.bool,\r\n  disableKBDismissScroll: PropTypes.bool,\r\n  enableResetScrollToCoords: PropTypes.bool,\r\n  keyboardShouldPersistTaps: PropTypes.string\r\n};\r\n\r\nconst StyledContent = connectStyle(\r\n  \"NativeBase.Content\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Content);\r\n\r\nexport { StyledContent as Content };"]}