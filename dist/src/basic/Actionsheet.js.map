{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","props","state","modalVisible","items","config","callback","OS","options","filtered","map","item","text","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","autoHide","duration","console","warn","backgroundColor","flex","justifyContent","minHeight","height","length","maxHeight","get","padding","elevation","color","marginHorizontal","marginTop","index","String","parseInt","borderColor","marginLeft","icon","iconColor","undefined","paddingLeft","actionsheetInstance","_root","showActionSheet","hideActionSheet","propTypes","style","oneOfType","object","number","array","StyledActionSheetContainer"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  View,\r\n  Modal,\r\n  Platform,\r\n  ActionSheetIOS,\r\n  TouchableOpacity,\r\n  ViewPropTypes,\r\n  FlatList,\r\n  Dimensions\r\n} from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport { Text } from \"./Text\";\r\nimport { Button } from \"./Button\";\r\nimport { ViewNB } from \"./View\";\r\nimport { Icon } from \"./Icon\";\r\nimport { Left } from \"./Left\";\r\nimport { Right } from \"./Right\";\r\nimport { Body } from \"./Body\";\r\nimport { ListItem } from \"./ListItem\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\n\r\nclass ActionSheetContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      items: []\r\n    };\r\n  }\r\n  static actionsheetInstance;\r\n  static show(config, callback) {\r\n    this.actionsheetInstance._root.showActionSheet(config, callback);\r\n  }\r\n  static hide(){\r\n    this.actionsheetInstance._root.hideActionSheet();\r\n  }\r\n  showActionSheet(config, callback) {\r\n    if (Platform.OS === \"ios\") {\r\n      if (typeof config.options[0] == \"object\") {\r\n        let options = config.options;\r\n        let filtered = options.map(item => {\r\n          return item.text;\r\n        });\r\n        config.options = filtered;\r\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\r\n      } else {\r\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        items: config.options,\r\n        title: config.title,\r\n        message: config.message,\r\n        destructiveButtonIndex: config.destructiveButtonIndex,\r\n        cancelButtonIndex: config.cancelButtonIndex,\r\n        modalVisible: true,\r\n        callback: callback\r\n      });\r\n    }\r\n  }\r\n\r\n  hideActionSheet(){\r\n    this.setState({ modalVisible: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.autoHide && this.props.duration) {\r\n      console.warn(`It's not recommended to set autoHide false with duration`);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        animationType={\"fade\"}\r\n        transparent={true}\r\n        visible={this.state.modalVisible}\r\n        onRequestClose={() => {\r\n          this.state.callback(this.state.cancelButtonIndex);\r\n          this.setState({ modalVisible: false });\r\n        }}\r\n      >\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={() => {\r\n            this.state.callback(this.state.cancelButtonIndex);\r\n            this.setState({ modalVisible: false });\r\n          }}\r\n          style={{\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n            flex: 1,\r\n            justifyContent: \"flex-end\"\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              minHeight: 56,\r\n              height: this.state.length * 80,\r\n              maxHeight: Dimensions.get(\"window\").height / 2,\r\n              padding: 15,\r\n              elevation: 4\r\n            }}\r\n          >\r\n            {this.state.title ? (\r\n              <Text style={{ color: \"#757575\" }}>{this.state.title}</Text>\r\n            ) : null}\r\n            <FlatList\r\n              style={{\r\n                marginHorizontal: -15,\r\n                marginTop: this.state.title ? 15 : 0\r\n              }}\r\n              data={this.state.items}\r\n              keyExtractor={(item, index) => String(index)}\r\n              renderItem={({ index, item }) => {\r\n                return typeof this.state.items[0] === \"string\" ? (\r\n                  <ListItem\r\n                    onPress={() => {\r\n                      this.state.callback(parseInt(index));\r\n                      this.setState({ modalVisible: false });\r\n                    }}\r\n                    style={{ borderColor: \"transparent\", marginLeft: 14 }}\r\n                  >\r\n                    <Text>{item}</Text>\r\n                  </ListItem>\r\n                ) : (\r\n                  <ListItem\r\n                    onPress={() => {\r\n                      this.state.callback(parseInt(index));\r\n                      this.setState({ modalVisible: false });\r\n                    }}\r\n                    style={{\r\n                      borderColor: \"transparent\",\r\n                      marginLeft: 14,\r\n                      height: 50\r\n                    }}\r\n                    icon\r\n                  >\r\n                    <Left>\r\n                      <Icon\r\n                        name={item.icon}\r\n                        style={{\r\n                          color: item.iconColor ? item.iconColor : undefined\r\n                        }}\r\n                      />\r\n                    </Left>\r\n                    <Body\r\n                      style={{ borderColor: \"transparent\", paddingLeft: 7 }}\r\n                    >\r\n                      <Text>{item.text}</Text>\r\n                    </Body>\r\n                    <Right />\r\n                  </ListItem>\r\n                );\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </TouchableOpacity>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nActionSheetContainer.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nconst StyledActionSheetContainer = connectStyle(\r\n  \"NativeBase.ActionSheetContainer\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ActionSheetContainer);\r\n\r\nexport { StyledActionSheetContainer as ActionSheetContainer };\r\n"]}