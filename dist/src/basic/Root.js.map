{"version":3,"sources":["../../../src/basic/Root.js"],"names":["Root","_root","c","props","flex","children","toastInstance","actionsheetInstance","propTypes","style","oneOfType","object","number","array","StyledRoot"],"mappings":"m1BAAA,4B,2CACA,yCACA,qC,mDACA,iEACA,mE,yEACA,gDACA,0CACA,4B,o4BAEMA,K,iQACK,iBACP,MACE,2DAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,EAAkD,MAAO,CAAEC,KAAM,CAAR,CAAzD,kDACG,KAAKD,KAAL,CAAWE,QADd,CAEE,8DACE,IAAK,eAAK,CACR,GAAIH,CAAJ,CAAO,+BAAMI,aAAN,CAAsBJ,CAAtB,CACR,CAHH,iDAFF,CAOE,iEACE,IAAK,eAAK,CACR,GAAIA,CAAJ,CACE,kCAAYK,mBAAZ,CAAkCL,CAAlC,CACH,CAJH,iDAPF,CADF,CAgBD,C,oCAGHF,KAAKQ,SAAL,yCAEEC,MAAO,oBAAUC,SAAV,CAAoB,CACzB,oBAAUC,MADe,CAEzB,oBAAUC,MAFe,CAGzB,oBAAUC,KAHe,CAApB,CAFT,GASA,GAAMC,YAAa,yCAAa,iBAAb,CAAgC,EAAhC,iCACjBd,IADiB,CAAnB,C,QAIuBA,I,CAAdc,U","file":"Root.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, ViewPropTypes } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport { ToastContainer as Toast } from \"./ToastContainer\";\r\nimport { ActionSheetContainer as ActionSheet } from \"./Actionsheet\";\r\nimport { Text } from \"./Text\";\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    return (\r\n      <View ref={c => (this._root = c)} {...this.props} style={{ flex: 1 }}>\r\n        {this.props.children}\r\n        <Toast\r\n          ref={c => {\r\n            if (c) Toast.toastInstance = c;\r\n          }}\r\n        />\r\n        <ActionSheet\r\n          ref={c => {\r\n            if (c)\r\n              ActionSheet.actionsheetInstance = c;\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nconst StyledRoot = connectStyle(\"NativeBase.Root\", {}, mapPropsToStyleNames)(\r\n  Root\r\n);\r\n\r\nexport { StyledRoot as Root };\r\n"]}