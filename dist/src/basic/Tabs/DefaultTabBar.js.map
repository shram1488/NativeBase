{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","Button","DefaultTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","style","renderTab","underlineStyle","tabContainerStyle","contextTypes","theme","object","getDefaultProps","topTabBarActiveTextColor","topTabBarTextColor","tabFontSize","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","textColor","fontWeight","flex","fontSize","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","tabDefaultBg","map","StyledTab"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nimport _ from \"lodash\";\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../../utils/mapPropsToStyleNames\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport { ViewPropTypes } from \"../../utils\";\nconst ReactNative = require(\"react-native\");\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null,\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) { },\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize\n  ) {\n    const headerContent =\n      typeof name !== \"string\" ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\n    // const fontSize = tabFontSize;\n    if (typeof name === \"string\") {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={name}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={_.random(1.2, 5.2)}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  \"NativeBase.DefaultTabBar\",\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}