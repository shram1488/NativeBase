{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","defaultProps","standardStyle","props","variables","context","theme","platformStyle","platform","_root","c","prepareRootProps","OS","selected","color","selectedColor","radioColor","lineHeight","height","fontSize","radioBtnSize","undefined","radioSelectedColorAndroid","radioBtnLineHeight","contextTypes","object","propTypes","bool","StyledRadio"],"mappings":"q1BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,4D,iDACA,mE,yEACA,qD,iDACA,mD,67BAEMA,M,2RAIe,CACjB,GAAMC,cAAe,CACnBC,cAAe,KADI,CAArB,CAIA,MAAO,2BAAa,KAAKC,KAAlB,CAAyBF,YAAzB,CAAP,CACD,C,uCAEQ,iBACP,GAAMG,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,mBAAlB,CAGA,GAAMG,eAAgBH,UAAUG,aAAhC,CACA,GAAMC,UAAWJ,UAAUI,QAA3B,CAEA,MACE,uEACE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADP,EAEM,KAAKC,gBAAL,EAFN,mDAIG,sBAASC,EAAT,GAAgB,KAAhB,EAAyB,CAAC,KAAKT,KAAL,CAAWD,aAArC,CACC,KAAKC,KAAL,CAAWU,QAAX,EACE,kDACE,MAAO,CACLC,MAAO,KAAKX,KAAL,CAAWY,aAAX,CACH,KAAKZ,KAAL,CAAWY,aADR,CAEHX,UAAUY,UAHT,CAILC,WAAY,EAJP,CAKLC,OAAQ,EALH,CAMLC,SAAUf,UAAUgB,YANf,CADT,CASE,KAAK,eATP,iDAFH,CAeC,kDACE,MAAO,CACLN,MACE,sBAASF,EAAT,GAAgB,KAAhB,CACI,KAAKT,KAAL,CAAWU,QAAX,CACE,KAAKV,KAAL,CAAWY,aAAX,CACE,KAAKZ,KAAL,CAAWY,aADb,CAEEX,UAAUY,UAHd,CAIE,KAAKb,KAAL,CAAWW,KAAX,CACE,KAAKX,KAAL,CAAWW,KADb,CAEEO,SAPR,CAQI,KAAKlB,KAAL,CAAWU,QAAX,CACE,KAAKV,KAAL,CAAWY,aAAX,CACE,KAAKZ,KAAL,CAAWY,aADb,CAEEX,UAAUkB,yBAHd,CAIE,KAAKnB,KAAL,CAAWW,KAAX,CACE,KAAKX,KAAL,CAAWW,KADb,CAEEO,SAhBL,CAiBLJ,WAAYb,UAAUmB,kBAjBjB,CAkBLJ,SAAUf,UAAUgB,YAlBf,CADT,CAqBE,KACE,sBAASR,EAAT,GAAgB,KAAhB,CACI,KAAKT,KAAL,CAAWU,QAAX,CACE,qBADF,CAEE,sBAHN,CAII,KAAKV,KAAL,CAAWU,QAAX,CACE,oBADF,CAEE,qBA5BV,iDAnBJ,CADF,CAsDD,C,qCAzEGb,K,CACGwB,Y,CAAe,CACpBlB,MAAO,oBAAUmB,MADG,C,CA2ExBzB,MAAM0B,SAAN,aACK,8BAAiBA,SADtB,EAEEb,SAAU,oBAAUc,IAFtB,CAGEzB,cAAe,oBAAUyB,IAH3B,GAMA,GAAMC,aAAc,yCAAa,kBAAb,CAAiC,EAAjC,iCAClB5B,KADkB,CAApB,C,QAIwBA,K,CAAf4B,W","file":"Radio.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TouchableOpacity, Platform } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport computeProps from \"../utils/computeProps\";\r\n\r\nclass Radio extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  prepareRootProps() {\r\n    const defaultProps = {\r\n      standardStyle: false\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const platform = variables.platform;\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        ref={c => (this._root = c)}\r\n        {...this.prepareRootProps()}\r\n      >\r\n        {Platform.OS === \"ios\" && !this.props.standardStyle ? (\r\n          this.props.selected && (\r\n            <Icon\r\n              style={{\r\n                color: this.props.selectedColor\r\n                  ? this.props.selectedColor\r\n                  : variables.radioColor,\r\n                lineHeight: 25,\r\n                height: 20,\r\n                fontSize: variables.radioBtnSize\r\n              }}\r\n              name=\"ios-checkmark\"\r\n            />\r\n          )\r\n        ) : (\r\n          <Icon\r\n            style={{\r\n              color:\r\n                Platform.OS === \"ios\"\r\n                  ? this.props.selected\r\n                    ? this.props.selectedColor\r\n                      ? this.props.selectedColor\r\n                      : variables.radioColor\r\n                    : this.props.color\r\n                      ? this.props.color\r\n                      : undefined\r\n                  : this.props.selected\r\n                    ? this.props.selectedColor\r\n                      ? this.props.selectedColor\r\n                      : variables.radioSelectedColorAndroid\r\n                    : this.props.color\r\n                      ? this.props.color\r\n                      : undefined,\r\n              lineHeight: variables.radioBtnLineHeight,\r\n              fontSize: variables.radioBtnSize\r\n            }}\r\n            name={\r\n              Platform.OS === \"ios\"\r\n                ? this.props.selected\r\n                  ? \"ios-radio-button-on\"\r\n                  : \"ios-radio-button-off\"\r\n                : this.props.selected\r\n                  ? \"md-radio-button-on\"\r\n                  : \"md-radio-button-off\"\r\n            }\r\n          />\r\n        )}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nRadio.propTypes = {\r\n  ...TouchableOpacity.propTypes,\r\n  selected: PropTypes.bool,\r\n  standardStyle: PropTypes.bool\r\n};\r\n\r\nconst StyledRadio = connectStyle(\"NativeBase.Radio\", {}, mapPropsToStyleNames)(\r\n  Radio\r\n);\r\n\r\nexport { StyledRadio as Radio };\r\n"]}